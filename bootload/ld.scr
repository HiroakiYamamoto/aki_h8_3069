OUTPUT_FORMAT("elf32-h8300")
OUTPUT_ARCH(h8300h)
ENTRY("_start")

MEMORY
{
	romall(rx)	: org = 0x000000, len = 0x080000 /* 518KB */
	softvec(rw)	: org = 0xffbf20, len = 0x000040 /* top of RAM */
	vectors(r)	: org = 0x000000, len = 0x000100 /* top of ROM */
	rom(rx)		: org = 0x000100, len = 0x07ff00

	ramall(rwx)	: org = 0xffbf20, len = 0x004000 /* 16KB */
	buffer(rwx)	: org = 0xffdf20, len = 0x001d00 /* 8KB */
	data(rwx)	: org = 0xfffc20, len = 0x000300
	bootstack(rw)	: org = 0xffff00, len = 0x000000
	intrstack(rw)	: org = 0xffff00, len = 0x000000 /* end of RAM */
}

SECTIONS
{
	.vectors : {
		../../build/build_h8300-elf/kzload/vector.o(.data)
	} > vectors

	.text : {
		_text_start = . ;
		*(.text)
		_etext = . ;
	} > rom

	.rodata : {
		_rodata_start = . ;
		*(.strings)
		*(.rodata)
		*(.rodata.*)
		_erodata = . ;
	} > rom

	.sofvec : {
		_softvec = .;
	} > softvec

	.buffer : {
		_buffer_start = . ;
	} > buffer

	.data : {
		_data_start = . ;
		*(.data)
		_edata = . ;
	} > data AT> rom

	.bss : {
		_bss_start = . ;
		*(.bss)
		*(COMMON)
		_ebss = . ;
	} > data AT> rom

	. = ALIGN(4);
	_end = . ;

	.bootstack : {
		_bootstack = .;
	} > bootstack

	.intrstack : {
		_intrstack = .;
	} > intrstack
}
